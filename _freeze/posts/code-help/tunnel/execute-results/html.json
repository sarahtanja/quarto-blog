{
  "hash": "9e3fdf202fe561bc58412d88e0333f36",
  "result": {
    "markdown": "---\ntitle: \"Make a secret tunnel\"\nsubtitle: \"use `.ssh/config` file to connect to a remote server\"\nauthor: \"Sarah Tanja\"\ndraft: true\ndate: 11/04/2024\ndate-format: long\ndate-modified: today\ncategories: [code]\ntoc: true\ntoc-title: Contents <i class=\"bi bi-bookmark-heart\"></i>\ntoc-depth: 5\ntoc-location: left\nreference-location: margin\ncitation-location: margin\nlink-external-icon: true\nlink-external-newwindow: true\n---\n\n\n## How to setup a 'tunnel' into the remote server\n\nOpen a terminal ( I opened my WSL Ubuntu terminal üêß) and make a .ssh directory in the home directory, and then open the nano text editor to write a config file in the .ssh folder:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nmkdir .ssh nano ~/.ssh/config\n```\n:::\n\n\n::: callout-tip\nThe .ssh directory is hidden because it starts with a `.`, and you won't see it unless you run `ls -a`\n:::\n\nIn the nano text editor I copied the following:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# secret tunnel     \nHost <server>_tunnel         \n    HostName <123.45.678.90>         \n    User <username>         \n    ControlMaster auto         \n    ServerAliveInterval 30         \n    ServerAliveCountMax 1200         \n    ForwardX11 yes         \n    LocalForward localhost:9000 127.0.0.1:9000\n```\n:::\n\n\nwhere:\n\n-   **\\<server\\>** is the remote server name (make this short and sweet, since you will execute this as a command later on and must needs type it out)\n\n-   **\\<123.45.678.90\\>** is the remote server IP address in the HostName field\n\n-   **\\<username**\\> is the username setup for the remote server in the User field\n\nI saved the config file by writing it out (Ctrl+X) and pressing Enter.\n\nNext, I tested the tunnel by opening a new Linux Ubuntu terminal and running:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nssh <server>_tunnel\n```\n:::\n\n\nIn addition, you can test direct access to the remote server (not using the tunnel) with:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nssh <username>@<IP-address>\n```\n:::\n\n\nThe tunnel connected me to the remote server and prompted me to enter the password associated with my user on the remote server.\n\n::: callout-tip\nOnce tunneled into the remote server you'll notice the \\<username\\>\\@\\<server\\> in the terminal changes from your local computer to the remote server.\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}