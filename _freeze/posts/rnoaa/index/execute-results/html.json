{
  "hash": "39f4746c9cccae3aa40d79c915a3b54d",
  "result": {
    "markdown": "---\ntitle: \"Tides & WX Station Data\"\nsubtitle: \"How to use the rnoaa package\"\nauthor: \"Sarah Tanja\"\ndate: '02/05/2024'\ncategories: [learning journey]\nimage: thumbnail.jpg\ndraft: false\ntoc: true\ntoc-title: Contents <i class=\"bi bi-bookmark-heart\"></i>\ntoc-depth: 5\ntoc-location: left\nreference-location: margin\ncitation-location: margin\nlink-external-icon: true\nlink-external-newwindow: true\nbibliography: ../library.bib\n---\n\n\n\"Air temperature and tide data Air temperature and tide level data was obtained from various sources depending on the location. Hourly temperature and tide data for Toke Point and Port Townsend and tide data from Neah Bay and Budd Inlet was obtained from publically available National Oceanic and Atmospheric Administration (NOAA) tide station data using the 'rnoaa' package in R (Chamberlin et al. 2021, R Core Team 2021). Hourly temperature and tide data for Vancouver and tide data for Pruth Bay was obtained from publically available Department of Fisheries and Oceans (DFO) Canada tide station data. Air temperature data for Pruth Bay was obtained from the Hakai Institute weather station (Giesbrecht et al. 2021). Air temperature data for Neah Bay was obtained from a weather station on nearby Tatoosh Island, WA (C. Pfister and T. Wootton personal communication). Air temperature data for Budd Inlet was obtained from the nearby Evergreen State College weather station. If raw data was reported at time scale less than one hour, mean hourly temperature was calculated. These data can be accessed two ways, both of which are available (Raymond, 2022). There, static data files are archived as well as code to query and process them if necessary. Long term, 1991 -- 2020, air temperature data was obtained from the National Aeronautical and Space Agency (NASA) DAYMET surface temperature database using the 'daymetr' package in R (Hufkens 2021). We extracted maximum and minimum daily surface air temperatures from 2° latitude by 2° longitude grids. Grids were selected by the location of the hourly temperatures/tide stations above. These are Toke Point 46.7499° N -124.0250°W, Budd Inlet 47.0643°N -122.9106°W, Neah Bay 48.3770°N -124.6897°W, Port Townsend and Vancouver 48.1172°N -122.7890°W, and Pruth Bay 51.6271°N -127.6450°W. From this raw daily data, long term daily mean high and low temperatures were calculated. Code to obtain and processes these data in the R environment are available (Raymond, 2022).\"\n\narchived in Zenodo https://zenodo.org/records/6555076\n\nhttps://github.com/wraymond/Ecology_heatwave-salish-sea-shellfish/tree/v1.0\n\n### Install packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif ('tidyverse' %in% rownames(installed.packages()) == 'FALSE') install.packages('tidyverse')\nif ('noaaoceans' %in% rownames(installed.packages()) == 'FALSE') install.packages('noaaoceans')\nif ('cowplot' %in% rownames(installed.packages()) == 'FALSE') install.packages('cowplot')\nif ('lubridate' %in% rownames(installed.packages()) == 'FALSE') install.packages('lubridate')\nif ('rnoaa' %in% rownames(installed.packages()) == 'FALSE') install.packages('rnoaa')\nif ('daymetr' %in% rownames(installed.packages()) == 'FALSE') install.packages('daymetr')\nif ('heatwaveR' %in% rownames(installed.packages()) =='FALSE') install.packages('heatwaveR')\nif ('tiff' %in% rownames(installed.packages()) == 'FALSE') install.packages('tiff')\n```\n:::\n\n\n### Load libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(noaaoceans)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'noaaoceans' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'forcats' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'lubridate' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(cowplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'cowplot' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\nlibrary(rnoaa)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rnoaa' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe rnoaa package will soon be retired and archived because the underlying APIs have changed dramatically. The package currently works but does not pull the most recent data in all cases. A noaaWeather package is planned as a replacement but the functions will not be interchangeable.\n```\n:::\n\n```{.r .cell-code}\nlibrary(daymetr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'daymetr' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(heatwaveR)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'heatwaveR' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(tiff)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tiff' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\ntheme_set(theme_classic())\n```\n:::\n\n### Load Data\nImport NOAA tide and weather station data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# NOAA Air temp data from Toke Point, Port Townsend #\nnoaa.air.stations <- c(\"9440910\", \"9444900\")\nair.temp <- data.frame()\nfor (i in noaa.air.stations) {\n    query.df2 <- query_coops_data(station_id = i,\n                                 start_date = '20210624',\n                                 end_date = '20210701',\n                                 data_product = 'air_temperature',\n                                 units = \"metric\", \n                                 time_zone = \"lst_ldt\",\n                                 interval = 'h') \n    air.temp <- air.temp %>% bind_rows(., query.df2)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'httr':\n  method           from  \n  print.cache_info hoardr\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Water Levels ##\n\n# NOAA Water levels from Toke Point, Port Townsend, Neah Bay, and Budd Inlet #\nnoaa.tide.stations <- c(\"9440910\", \"9444900\", \"9443090\", \"9446807\")\nwater.level <- data.frame()\nfor (i in noaa.tide.stations) {\n    query.df3 <- query_coops_data(station_id = i,\n                                 start_date = '20210624',\n                                 end_date = '20210701',\n                                 data_product = 'predictions',\n                                 units = \"metric\",\n                                 datum = \"MLLW\",\n                                 interval = \"h\",\n                                 time_zone = \"lst_ldt\") \n    water.level <- water.level %>% bind_rows(., query.df3)\n}\n```\n:::\n\n\n### Load Gridded climate data\nPull from Daymet 2 X 2 degree surface grid. https://daymet.ornl.gov/getdata\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Olympia ##\noly.grid <- download_daymet(site = \"olympia\", lat = 47.064316, lon = -122.910577, start = 1991, end = 2020, internal = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDownloading DAYMET data for: olympia at 47.064316/-122.910577 latitude/longitude !\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nDone !\n```\n:::\n\n```{.r .cell-code}\n## Port Townsend + Vancouver BC ##\nptv.grid <- download_daymet(site = \"port_townsend\", lat = 48.1172, lon = -122.789, start = 1991, end = 2020, internal = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDownloading DAYMET data for: port_townsend at 48.1172/-122.789 latitude/longitude !\n\nDone !\n```\n:::\n\n```{.r .cell-code}\n## Neah Bay ##\nnhb.grid <- download_daymet(site = \"neah_bay\", lat = 48.377, lon = -124.6897, start = 1991, end = 2020, internal = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDownloading DAYMET data for: neah_bay at 48.377/-124.6897 latitude/longitude !\n\nDone !\n```\n:::\n\n```{.r .cell-code}\n## Toke Point ##\ntkp.grid <- download_daymet(site = \"toke_point\", lat = 46.7499, lon = -124.025, start = 1991, end = 2020, internal = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDownloading DAYMET data for: toke_point at 46.7499/-124.025 latitude/longitude !\n\nDone !\n```\n:::\n\n```{.r .cell-code}\n## Calvert Island ##\ncvi.grid <- download_daymet(site = \"calvert_island\", lat = 51.6271, lon = -127.645, start = 1991, end = 2020, internal = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDownloading DAYMET data for: calvert_island at 51.6271/-127.645 latitude/longitude !\n\nDone !\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}